package application;

import java.util.InputMismatchException;
import java.util.Scanner;

import onitama.OnitamaCard;
import onitama.OnitamaPiece;
import onitama.OnitamaPosition;

public class UI {
	
	public static void clearScreen() {
		System.out.println("\033[H\033[2J");
		System.out.flush();
	}
	
	public static OnitamaPosition readOnitamaPosition(Scanner sc) {
		try {
			String s = sc.nextLine();
			char column = s.charAt(0);
			int row = Integer.parseInt(s.substring(1));
			return new OnitamaPosition(column, row);
		}
		catch (RuntimeException e) {
			throw new InputMismatchException("Error reading OnitamaPosition");
		}
	}
	
	public static OnitamaCard readOnitamaCard(Scanner sc) {
		try {
			String s = sc.nextLine();
			return new OnitamaCard(s);
		}
		catch (RuntimeException e) {
			throw new InputMismatchException("Error Card not found");
		}
	}

	public static void printBoard(OnitamaPiece[][] pieces) {
		for (int i = 0; i < pieces.length; i++) {
			System.out.print((5-i)+" ");
			for (int j = 0; j < pieces.length; j++) {
				printPiece(pieces[i][j], false);
			}
			System.out.println();
		}
		System.out.print("  a b c d e");
	}
	
	public static void printBoard(OnitamaPiece[][] pieces, boolean[][] possibleMoves) {
		for (int i = 0; i < pieces.length; i++) {
			System.out.print((5-i)+" ");
			for (int j = 0; j < pieces.length; j++) {
				printPiece(pieces[i][j], possibleMoves[i][j]);
			}
			System.out.println();
		}
		System.out.print("  a b c d e");
	}
	
	private static void printPiece(OnitamaPiece piece, boolean background) {
		
		if(background) {
			System.out.println("c");
		}
		if (piece == null) {
			System.out.print("-");
		} else {
			System.out.print(piece);
		}
		System.out.print(" ");
	}
}
 